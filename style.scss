---
---

//
// IMPORTS
//

@import "reset";
@import "variables";
// Syntax highlighting @import is at the bottom of this file

/**************/
/* BASE RULES */
/**************/

html {
  font-size: 100%;
  height: 100%;
}

body {
	background: $darkerGray;
  font: 18px/1.4 $helvetica;
  height: 100%;
  display: flex;
  color: $white;
  flex-direction: column;
}

.container {
  margin: 0 auto;
  max-width: 740px;
  padding: 0 10px;
  width: 100%;
  flex: 1 0 auto;
}

h1, h2, h3, h4, h5, h6 {
  font-family: $helveticaNeue;
  color: $white;
  font-weight: bold;

  line-height: 1.7;
  margin: 1em 0 15px;
  padding: 0;

  @include sixforty {
    line-height: 1.4;
  }
}

h1 {
  font-size: 30px;
  a {
    color: inherit;
  }
  &.page-title {
    font-size: 30px;
    margin: 0;
    text-align: center;
    width: 100%;
    padding: 5px;
    font-weight: 300;
    background: $green;
    color: $black;
    font-family: sans-serif;
  }
}

h2 {
  font-size: 24px;
}

h3 {
  font-size: 20px;
  margin: 0 15px;
}

h4 {
  font-size: 18px;
  color: $white;
}

p {
  margin: 15px 0;
}

a {
  color: $green;
  text-decoration: none;
	cursor: pointer;
  &:hover, &:active {
    color: $lightgreen;
  }
}

ul, ol {
  margin: 15px 0;
  padding-left: 30px;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

ol ul, ul ol, ul ul, ol ol {
  margin: 0;
}

ul ul, ol ul {
  list-style-type: circle;
}

li {
  padding-bottom: 5px;
}

em, i {
  font-style: italic;
}

strong, b {
  font-weight: bold;
  color: $green;
}

img {
  max-width: 100%;
}

// Fixes images in popup boxes from Google Translate
.gmnoprint img {
  max-width: none;
}

.date {
  font-style: italic;
  color: $white;
}

// Specify the color of the selection
::-moz-selection {
  color: $black;
  background: $white;
}
::selection {
  color: $black;
  background: $white;
}

// Nicolas Gallagher's micro clearfix hack
// http://nicolasgallagher.com/micro-clearfix-hack/
.clearfix:before,
.clearfix:after {
    content: " ";
    display: table;
}

.clearfix:after {
    clear: both;
}

/*********************/
/* LAYOUT / SECTIONS */
/*********************/

//
// .masthead
//
.wrapper-masthead {
  background: $darkerGray;
  margin: 0 auto;
  max-width: 740px;
  width: 100%;
}
.masthead {
  padding: 20px 0;
  border-bottom: 1px solid $green;


  @include sixforty {
    text-align: center;
  }
}

.site-avatar {
  float: left;
  width: 70px;
  height: 70px;
  margin-right: 15px;

  @include sixforty {
    float: none;
    display: block;
    margin: 0 auto;
  }

  img {
    border-radius: 5px;
  }
}

.site-info {
  float: left;

  @include sixforty {
    float: none;
    display: block;
    margin: 0 auto;
  }
}

.site-name {
  margin: 0;
  color: $white;
  cursor: pointer;
  font-family: $helveticaNeue;
  font-weight: 300;
  font-size: 28px;
  letter-spacing: 1px;
}

.site-description {
  margin: -5px 0 0 0;
  color: $white;
  font-size: 16px;

  @include sixforty {
    margin: 3px 0;
  }
}

nav {
  float: right;
  margin: 0 auto;
  font-family: $helveticaNeue;
  font-size: 18px;
  @include sixforty {
    float: none;
    margin-top: 9px;
    display: block;
  }
  a {
    color: $white;
    letter-spacing: 1px;
    display: block;
    padding: 0 16px;
    line-height: inherit;
    cursor: pointer;
  }
  ul {
    list-style: none;
    padding-left: 0;
    margin-top: 0;
    margin-bottom: 0;
  }
}
.nav {
  &__menu {
    line-height: 45px;
    &-item {
      display: inline-block;
      position: relative;
      &:hover {
         .nav__submenu {
           display: block;
         }
         background-color: $black;
       }
    }
  }
  &__submenu {
    font-weight: 300;
    text-transform: none;
    display: none;
    position: absolute;
    width: 220px;
    background-color: $darkerGray;
    z-index: 1;
    border: 1px solid #DDDFDE;
    &-item {
      text-align: left;
      &:hover {
        background-color: $black;
      }
    }
  }
}

//
// .main
//
#main {
  background: $darkerGray;
  padding-bottom: 30px;
}
.page {
  margin-top: 20px;
}
.row {
  display: flex;
  flex-wrap: wrap;
  padding: 0 4px;
}

/* Create columns that sit next to each other */
.column {
  padding: 15px 4px 0;
  h2,
  h3 {
    text-align: center;
  }
  img {
    margin-top: 8px;
    vertical-align: middle;
    width: 100%;
    -webkit-transition: all 0.50s;
    transition: all 0.50s;
    &:hover {
        border: 1px solid $white;
        filter: brightness(130%);
        -webkit-filter: brightness(130%);
        -moz-filter: brightness(130%);
        -o-filter: brightness(130%);
        -ms-filter: brightness(130%);
        -webkit-transition: all 0.50s;
        transition: all 0.50s;
    }
  }
  &.soon::after {
    content: "Coming Soon";
    display: block;
    position: relative;
    top: -65px;
    text-align: center;
    background: $darkerGray;
    padding: 5px 0;
    border-top: 2px solid $white;
    border-bottom: 2px solid $white;
  }
  &.half {
    flex: 50%;
    max-width: 50%;
    @include sixhundred {
      flex: 100%;
      max-width: 100%;
    }
  }
  &.third {
    flex: 33.333%;
    max-width: 33.333%;
    @include eighthundred {
      flex: 50%;
      max-width: 50%;
    }
    @include sixhundred {
      flex: 100%;
      max-width: 100%;
    }
  }
}

// Timeline
.flex-parent {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
}
.input-flex-container {
	display: flex;
	justify-content: space-around;
	align-items: center;
	flex-wrap: wrap;
	width: $parentWidth;
	max-width: $parentMaxWidth;
	position: relative;
	z-index: 0;
	margin-left: 4%; //make up for offset of .dot-info
  margin-top: 40px;
}
input.node {
	width: $dotWidth;
	height: $dotWidth;
	background-color: $active;
	position: relative;
	border-radius: 50%;
	display: block;
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
	cursor: pointer;
	&:focus {
		outline: none;
  }
	&::before, &::after {
		content: '';
		display: block;
		position: absolute;
		z-index: -1;
		top: 50%;
		transform: translateY(-50%);
		background-color: $active;
		width: $parentWidth / $numDots;
		height: 5px;
		max-width: $parentMaxWidth / $numDots;
  }
  &.first::before,
  &.last::after {
    content: none;
  }
	&::before {
		left: calc(#{-$parentWidth / $numDots} + #{$dotWidth / 2});
  }
	&::after {
		right: calc(#{-$parentWidth / $numDots} + #{$dotWidth / 2});
  }
	&:checked {
		background-color: $active;
		&::before {
			background-color: $active;
    }
		&::after {
			background-color: $inactive;
    }
  }
	&:checked {
		~ input {
			&, &::before, &::after {
				background-color: $inactive;
      }
    }
		+ .dot-info {
			span {
				font-size: 13px;
				font-weight: bold;
        color: $active;
      }
    }
  }
}
.dot-info {
	width: $dotWidth;
	height: $dotWidth;
	display: block;
	// background-color: red;
	visibility: hidden;
	position: relative;
	z-index: -1;
	//position each span on top of the dot immediately before it; -1px at the end is just fudging the numbers for rounding error
	left: calc((((#{$parentWidth} - #{$dotWidth}) / #{$numDots}) * -1) - 1px);
	span {
		visibility: visible;
		position: absolute;
		font-size: 12px;
		&.label {
      top: -40px;
      left: 8px;
			width: 100px;
      text-align: center;
    }
  }
  &.as {
    span.label {
      left: -35px;
    }
  }
  &.below .label {
    top: 45px;
  }
}
#timeline-descriptions-wrapper {
  margin-top: 50px;
	width: 100%;
	margin-left: -6%; //make up for offset of .dot-info
	div.section {
		margin-top: 0;
		display: none;
  }
  h2 {
    text-align: center;
  }
  img {
    float: right;
    width: 330px;
    height: 330px;
    padding: 20px;
    border-radius: 8%;
    position: relative;
    z-index: 1;
  }
  .hrc img {

  }
  .as img {

  }
}

// magic shenanigans
$descriptions: 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine';

@each $desc in $descriptions {
	input[data-description="#{$desc}"]:checked ~ #timeline-descriptions-wrapper {
		div[data-description="#{$desc}"] {
			display: block;
    }
  }
}

@media (min-width: $parentMaxWidth / $parentWidthBase) {
	.input-flex-container {
		margin-left: 6%;
  }
	input.node {
		&::before {
			left: #{-($parentMaxWidth / $numDots) + ($dotWidth / 2)};
    }
		&::after {
			right: #{-($parentMaxWidth / $numDots) + ($dotWidth / 2)};
    }
  }
	.dot-info {
		left: calc((((#{$parentMaxWidth} - #{$dotWidth}) / #{$numDots}) * -1) - 1px);
  }
	#timeline-descriptions-wrapper {
		margin-left: -6%;
  }
}

@media (max-width: 630px) {
	.flex-parent {
		justify-content: initial;
  }
	.input-flex-container {
		flex-wrap: wrap;
		justify-content: center;
		width: 400px;
		height: auto;
		margin-top: 3vh;
		margin-left: 0;
		padding-bottom: 30px;
  }
	input.node, .dot-info {
		width: 60px;
		height: 60px;
		margin: 0 20px 50px;
  }
	input.node {
		background-color: transparent !important;
		z-index: 1;
		&::before, &::after {
			content: none;
    }
		&:checked {
			+ .dot-info {
				background-color: $active;
				span {
					&.label {
						font-size: 12px;
          }
        }
      }
    }
  }
	.dot-info {
		visibility: visible;
		border-radius: 50%;
		z-index: 0; // position behind input, so input remains clickable
		left: 0;
		margin-left: -70px;
		background-color: $inactive;
		span {
			&.label {
				top: calc(100% + 5px);
				left: 50%;
				transform: translateX(-50%);
				text-indent: 0;
				text-align: center;
      }
    }
    &.as {
      span.label {
        left: 50%;
      }
    }
    &.below .label {
      top: calc(100% + 5px);
    }
  }
	#timeline-descriptions-wrapper {
		margin-top: 0;
		margin-left: 0;
    div > img {
      display: none;
    }
  }
}

@media (max-width: 480px) {
	.input-flex-container {
		width: 340px;
  }
}

@media (max-width: 400px) {
	.input-flex-container {
		width: 300px;
  }
}

/* Spoiler */
.spoiler {
  position: relative;
  min-width: 320px;
  margin-top: 20px;
  clear: both;
}
.spoiler > .spoiler-button {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  font-family: inherit;
}
.spoiler > .spoiler-button:after {
  position: absolute;
  right: 0;
  top: 0;
}
.spoiler > .spoiler-button ~ .spoiler-body {
  transform-origin: top center;
  position: relative;
  transition: all .5s;
}
.spoiler > .spoiler-button:not(:checked) ~ .spoiler-body {
  opacity: 0;
  max-height: 0;
  overflow: hidden;
}
.spoiler > .spoiler-button:checked ~ .spoiler-body {
  opacity: 1;
  overflow: auto;
}
@keyframes spoiler-focus {
  0%, 1%      { content: inherit; }
  99%, 100%   { content: url(''); }
}
.spoiler > .spoiler-button:checked ~ .spoiler-body > * {
  content: inherit;
}
.spoiler > .spoiler-button:not(:checked) ~ .spoiler-body > * {
  animation: spoiler-focus 1s linear both;
}
.spoiler > .spoiler-button:after,
.spoiler > .spoiler-head,
.spoiler > .spoiler-button:checked ~ .spoiler-body {
  padding: 8px 16px;
}
.spoiler > .spoiler-button ~ .spoiler-body {
  padding-left: 16px;
  padding-right: 16px;
}
.spoiler {
  background: $black;
  border: 2px solid $white;
  border-radius: 4px;
}
.spoiler > .spoiler-head {
  color: $green;
  font-weight: 600;
}
.spoiler > .spoiler-button:after {
  border-radius: 4px;
  color: $green;
  font-size: 1.4em;
  font-style: italic;
  font-weight: 600;
}
.spoiler > .spoiler-button:not(:checked):after {
  content: '[ + ]';
}
.spoiler > .spoiler-button:checked:after {
  content: '[ - ]';
}
.spoiler > .spoiler-button:focus {
  outline: 4px solid $white;
}
.spoiler > .spoiler-button ~ .spoiler-body {
  background: $darkerGray;
  box-shadow: 0 0 0 1px #0001;
}
.spoiler .key {
  li {
    position: relative;
  }
  li::marker {
    font-size: 2rem;
  }
  .list-yellow::marker {
    color: #fafa03;
  }
  .list-pink::marker {
    color: #fc3ef3;
  }
  .list-blue::marker {
    color: #0730fb;
  }
  .list-orange::marker {
    color: #fd9104;
  }
  .list-green::marker {
    color: #02fa02;
  }
  .list-red-arrow::marker {
    color: #fb2600;
    content: " \2192";
  }
  li span {
    position: relative;
    top: -0.2rem;
    margin-left: 15px;
  }
  padding-left: 8%;
}

/* Footer */
.wrapper-footer {
  border-top: 1px solid $white;
  border-bottom: 1px solid $white;
  background-color: $black;
  flex-shrink: 0;
}

footer {
  padding: 20px 0;
  text-align: center;
}

/* Smooth scrolling IF user doesn't have a preference due to motion sensitivities */
@media screen and (prefers-reduced-motion: no-preference) {
  html {
    scroll-behavior: smooth;
  }
}

// Settled on moving the import of syntax highlighting to the bottom of the CSS
// ... Otherwise it really bloats up the top of the CSS file and makes it difficult to find the start
@import "highlights";
@import "svg-icons";
